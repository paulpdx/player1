-- MySQL Script generated by MySQL Workbench
-- 04/05/16 10:23:16
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `city`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `city` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `city_code` VARCHAR(10) NULL,
  `city_name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `artist_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `artist_genre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `artist_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `artist_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `artist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `city_id` INT NOT NULL,
  `created_dt` DATETIME NULL,
  `last_modified_dt` DATETIME NULL,
  `profile` TEXT NULL,
  `active` INT NULL,
  `artist_genre_id` INT NOT NULL,
  `artist_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_artist_city_idx` (`city_id` ASC),
  INDEX `fk_artist_artist_genre1_idx` (`artist_genre_id` ASC),
  INDEX `fk_artist_artist_type1_idx` (`artist_type_id` ASC),
  CONSTRAINT `fk_artist_city`
    FOREIGN KEY (`city_id`)
    REFERENCES `city` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_artist_artist_genre1`
    FOREIGN KEY (`artist_genre_id`)
    REFERENCES `artist_genre` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_artist_artist_type1`
    FOREIGN KEY (`artist_type_id`)
    REFERENCES `artist_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NULL,
  `first_name` VARCHAR(50) NULL,
  `last_name` VARCHAR(50) NULL,
  `email` VARCHAR(45) NULL,
  `created_dt` DATETIME NULL,
  `last_modified_dt` DATETIME NULL,
  `artist_id` INT NULL,
  `active` INT NULL,
  `user_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_artist1_idx` (`artist_id` ASC),
  INDEX `fk_user_user_type1_idx` (`user_type_id` ASC),
  CONSTRAINT `fk_user_artist1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_user_type1`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `user_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `song_style`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `song_style` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `song_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `song_genre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `song` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `url_location` VARCHAR(255) NULL,
  `song_info` TEXT NULL,
  `writing_credit` VARCHAR(255) NULL,
  `created_dt` DATETIME NULL,
  `last_modified_dt` DATETIME NULL,
  `artist_id` INT NULL,
  `intro_url` VARCHAR(255) NULL,
  `outro_url` VARCHAR(255) NULL,
  `instrumental` INT NULL,
  `songcol` VARCHAR(45) NULL,
  `song_style_id` INT NOT NULL,
  `song_genre_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_song_artist1_idx` (`artist_id` ASC),
  INDEX `fk_song_song_style1_idx` (`song_style_id` ASC),
  INDEX `fk_song_song_genre1_idx` (`song_genre_id` ASC),
  CONSTRAINT `fk_song_artist1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_song_song_style1`
    FOREIGN KEY (`song_style_id`)
    REFERENCES `song_style` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_song_song_genre1`
    FOREIGN KEY (`song_genre_id`)
    REFERENCES `song_genre` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `listened`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `listened` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `song_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `artist_id_bcd` INT NULL,
  `listened_dt` DATETIME NULL,
  `comments` VARCHAR(500) NULL,
  `skipped` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_listened_song1_idx` (`song_id` ASC),
  INDEX `fk_listened_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_listened_song1`
    FOREIGN KEY (`song_id`)
    REFERENCES `song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_listened_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `playlist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `create_date` DATETIME NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_playlist_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_playlist_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `playlist_song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `playlist_song` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `song_id` INT NOT NULL,
  `playlist_id` INT NOT NULL,
  `sequence` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_playlist_song_song1_idx` (`song_id` ASC),
  INDEX `fk_playlist_song_playlist1_idx` (`playlist_id` ASC),
  CONSTRAINT `fk_playlist_song_song1`
    FOREIGN KEY (`song_id`)
    REFERENCES `song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_song_playlist1`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `playlist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
